This is the README file for A0093910H's submission

== Personal Information ==
Matric No: A0093910H
Email: a0093910@u.nus.edu

== General Notes about this assignment ==

Indexing: 
A corpus is first generated by reading files in reuter folder. Stemming and 
case-folding is then performed on each token to produce terms that will be stored
in dictionary together with the associated document frequency. Postings list is
generated with raw term frequency of the term in each document.

Another document named "doclength.txt" is generated to store the document lengths
of each document for length normalization during searching.

Searching:
Dictionary and document lengths are read into the memory from the respective files. 
Each query is then processed sequentially, ranking each document in the collection
with lnc.ltc ranking scheme. The top ten result for each query is generated into 
the specified output file.

== Files included with this submission ==

ESSAY.txt		 - answers to essay questions
README.txt		 - readme file
utility.py 	     - utility module for indexing and searching operation
index.py 	     - indexes files to dictionary and posting 
search.py        - searches dictionary and posting given queries
doclength.txt    - txt file containing document length for each document
dictionary.txt   - txt file containing the dictionary with document frequency
postings.txt     - txt file containing postings list
ordereddict.py	 - OrderedDict's implemenation by Raymond Hettinger for python version < 2.7

== Statement of individual work ==

Please initial one of the following statements.

[x] I, A0093910H, certify that we have followed the CS 3245 Information
Retrieval class guidelines for homework assignments.  In particular, I
expressly vow that I have followed the Facebook rule in discussing
with others in doing the assignment and did not take notes (digital or
printed) from the discussions.  

[] I, A0093910H, did not follow the class rules regarding homework
assignment, because of the following reason:

I suggest that I should be graded as follows:

== References ==

1. NLTK XMLCorpusReader
http://www.nltk.org/_modules/nltk/corpus/reader/xmldocs.html#XMLCorpusReader.xml

2. The ElementTree XML API
https://docs.python.org/2/library/xml.etree.elementtree.html

3. How to get indices of a sorted array in python
# http://stackoverflow.com/questions/6422700/how-to-get-indices-of-a-sorted-array-in-python